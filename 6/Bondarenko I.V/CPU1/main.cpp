/*
»ѕ«пз-12-2 Ѕондаренко »ван ¬€чеславович

¬ариант 6

  2.4.1 »сследовать выполнение арифметических операций

  */

void main ()				
{
	long	N=1;	// €чейка пам€ти дл€ аргумента
	long P=1; //ячейка дл€ накоплени€ 3^n
	long	REZ[6];	// 6 €чек пам€ти дл€ результата

	_asm{	;ассемблерна€ вставка
	
	lea		EBX, REZ	; загрузка адреса результатов в регистр EBX
	mov		ECX, 6	; счетчик количества повторений цикла
m1:	mov		EAX, N	; EAX = N
	add		EAX, 5	; EAX = N+5
	mov		EDI, EAX	;пересылка знаменател€ в регистр EDI

	mov		EAX, 3	; EAX = 3
	mul		P	; умножение 3^n
	mov		P, EAX	; пересылка 3^n в €чейку пам€ти
	cdq	; расширение операнда-делимого в EAX-EDX
	div		EDI	; частное - EAX, остаток - EDX
	shr		EDI, 1	;дление знаменател€ на 2
	cmp		EDI, EDX	;сравнение половины знаменател€ с остатком
	adc		EAX, 0	;добавление к частому заема от сравнени€
	

	mov		dword ptr[EBX], EAX	;пересылка результата в пам€ть
	add		EBX, 4	;увеличение адреса результатов
	add		N, 1	;увеличение аргумента n++	
	loop		m1	;зацикливание по счетчику ECX	
	}	//окончание ассемблерной вставки		
}
